     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, fclose, fprintf, fscanf
     6                                  import exit msvcrt.dll   
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fscanf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13                                  
    14 00000000 6162636465666768        sir db "abcdefgh"
    15 00000008 696E7075742E747874-     nume_fisier db "input.txt", 0
    15 00000011 00                 
    16 00000012 7200                    mod_acces_input db "r", 0
    17 00000014 00000000                descriptor dd 0
    18 00000018 256400                  format_citire db "%d", 0
    19 0000001B <res 00000004>          n resd 1
    20 0000001F 6F75747075742D692E-     nume_fisier_iesire db "output-i.txt", 0
    20 00000028 74787400           
    21 0000002C 7700                    mod_acces_output db "w", 0
    22 0000002E <res 00000004>          descriptor_temporar resd 1
    23 00000032 257300                  format_afisare db "%s", 0
    24 00000035 0000                    caracter db 0, 0
    25                                  
    26                                  ;Se da in data segment un sir de exact 8 caractere si numele unui fisier. 
    27                                  ;Fisierul dat contine un numar de la 0 la 7. Sa se citeasca acel numar (fie n numarul citit). 
    28                                  ;Sa se creeze n fisiere, fiecare avand numele output-i.txt, unde i=0,n. 
    29                                  ;Sa se scrie in fiecare fisier ultimele (i+1) caractere din sirul dat in ordine inversa.
    30                                  
    31                                  segment code use32 class=code
    32                                      start:
    33                                          ;fopen(nume_fisier, mod_acces_input)
    34 00000000 68[12000000]                    push dword mod_acces_input
    35 00000005 68[08000000]                    push dword nume_fisier
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add esp, 4 * 2
    38                                          
    39 00000013 83F800                          cmp eax, 0
    40 00000016 0F84AE000000                    je eroare_deschidere_fisier
    41                                          
    42 0000001C A3[14000000]                    mov [descriptor], eax
    43                                          
    44                                          ;fscanf(descriptor, format_citire, n)
    45 00000021 68[1B000000]                    push dword n
    46 00000026 68[18000000]                    push dword format_citire
    47 0000002B FF35[14000000]                  push dword [descriptor]
    48 00000031 FF15[00000000]                  call [fscanf]
    49 00000037 83C40C                          add esp, 4 * 3
    50                                          
    51 0000003A B900000000                      mov ecx, 0
    52 0000003F 3B0D[1B000000]                  cmp ecx, [n]
    53 00000045 7F74                            jg final
    54                                     
    55                                          repeta:
    56 00000047 89CB                                mov ebx, ecx
    57 00000049 80C330                              add bl, '0'
    58 0000004C 881D[26000000]                      mov [nume_fisier_iesire + 7], bl
    59 00000052 89CB                                mov ebx, ecx
    60 00000054 51                                  push ecx
    61                                              
    62                                              ;fopen(nume_fisier_iesire, mod_acces_output)
    63 00000055 68[2C000000]                        push dword mod_acces_output
    64 0000005A 68[1F000000]                        push dword nume_fisier_iesire
    65 0000005F FF15[00000000]                      call [fopen]
    66 00000065 83C408                              add esp, 4 * 2
    67                                              
    68 00000068 83F800                              cmp eax, 0
    69 0000006B 7443                                je eroare_deschidere_fisier_output
    70                                              
    71 0000006D A3[2E000000]                        mov [descriptor_temporar], eax
    72                                              
    73 00000072 89D9                                mov ecx, ebx
    74 00000074 83C101                              add ecx, 1
    75 00000077 BE[07000000]                        mov esi, sir + 7
    76                                              
    77                                              iterare:
    78 0000007C 51                                      push ecx
    79 0000007D FD                                      std
    80 0000007E AC                                      lodsb
    81 0000007F FC                                      cld
    82                                                  
    83 00000080 A2[35000000]                            mov [caracter], al
    84                                                  
    85                                                  ;fprintf(descriptor_temporar, format_afisare, caracter)
    86 00000085 68[35000000]                            push dword caracter
    87 0000008A 68[32000000]                            push dword format_afisare
    88 0000008F FF35[2E000000]                          push dword [descriptor_temporar]
    89 00000095 FF15[00000000]                          call [fprintf]
    90 0000009B 83C40C                                  add esp, 4 * 3
    91                                                  
    92 0000009E 59                                      pop ecx
    93 0000009F E2DB                                loop iterare
    94                                              
    95                                              ;fclose(descriptor_temporar)
    96 000000A1 FF35[2E000000]                      push dword [descriptor_temporar]
    97 000000A7 FF15[00000000]                      call [fclose]
    98 000000AD 83C404                              add esp, 4 * 1
    99                                              
   100                                              eroare_deschidere_fisier_output:
   101                                              
   102 000000B0 59                                  pop ecx
   103 000000B1 FEC1                                inc cl
   104 000000B3 3A0D[1B000000]                      cmp cl, [n]
   105 000000B9 7E8C                            jle repeta
   106                                          
   107                                     
   108                                          final:
   109                                     
   110                                          ;fclose(descriptor)
   111 000000BB FF35[14000000]                  push dword [descriptor]
   112 000000C1 FF15[00000000]                  call [fclose]
   113 000000C7 83C404                          add esp, 4 * 1
   114                                          
   115                                          eroare_deschidere_fisier:
   116 000000CA 6A00                            push    dword 0     
   117 000000CC FF15[00000000]                  call    [exit]       
