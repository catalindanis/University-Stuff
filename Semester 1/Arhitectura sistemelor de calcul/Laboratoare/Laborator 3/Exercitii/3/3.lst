     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9                                  
    10 00000000 0100                    a dw 1
    11 00000002 01                      b db 1
    12 00000003 03000000                c dd 3
    13 00000007 02000000                e dd 2
    14 0000000B 1400000000000000        x dq 20
    15                                  
    16                                  segment code use32 class=code
    17                                  start:
    18                                      ;a,b,c-byte; e-doubleword; x-quadword - fara semn
    19                                      ;x-(a*b*25+c*3)/(a+b)+e = 1 
    20                                      ;mov al, [a]
    21                                      ;mul byte[b]
    22                                      ;mov dx, 25
    23                                      ;mul dx
    24                                      ;push dx
    25                                      ;push ax
    26                                      ;pop ebx
    27                                      ;mov eax, 0
    28                                      ;mov al, [c]
    29                                      ;mov ah, 3
    30                                      ;mul ah
    31                                      ;add eax, ebx
    32                                      
    33                                      ;push eax
    34                                      ;pop ax
    35                                      ;pop dx
    36                                      
    37                                      ;mov bl, [a]
    38                                      ;add bl, [b]
    39                                      ;mov bh, 0
    40                                      ;div bx
    41                                      
    42                                      ;mov bx, ax
    43                                      ;mov eax, 0
    44                                      ;mov ax, bx
    45                                      
    46                                      ;add eax, [e]
    47                                      ;mov edx, 0
    48                                      
    49                                      ;mov ebx, [x]
    50                                      ;mov ecx, [x+4]
    51                                      
    52                                      ;xchg eax, ebx
    53                                      ;xchg edx, ecx
    54                                      
    55                                      ;sub eax, ebx
    56                                      ;sbb edx, ecx
    57                                      
    58                                      ;a-word; b-byte; c-doubleword; x-qword - fara semn
    59                                      ;(a*a+b+x)/(b+b)+c*c = 20
    60                                      
    61 00000000 66A1[00000000]              mov ax, [a]
    62 00000006 66F725[00000000]            mul word[a]
    63 0000000D 6652                        push dx
    64 0000000F 6650                        push ax
    65 00000011 58                          pop eax
    66 00000012 BB00000000                  mov ebx, 0
    67 00000017 8A1D[02000000]              mov bl, [b]
    68 0000001D 01D8                        add eax, ebx
    69 0000001F BA00000000                  mov edx, 0
    70 00000024 0305[0B000000]              add eax, [x]
    71 0000002A 1315[0F000000]              adc edx, [x+4]
    72 00000030 BB00000000                  mov ebx, 0
    73 00000035 8A1D[02000000]              mov bl, [b]
    74 0000003B 021D[02000000]              add bl, [b]
    75 00000041 F7F3                        div ebx
    76 00000043 B900000000                  mov ecx, 0
    77 00000048 89C3                        mov ebx, eax
    78 0000004A A1[03000000]                mov eax, [c]
    79 0000004F F725[03000000]              mul dword[c]
    80                                      
    81 00000055 01D8                        add eax, ebx
    82 00000057 11CA                        adc edx, ecx
    83                                      
    84 00000059 6A00                        push dword 0
    85 0000005B FF15[00000000]              call [exit]
