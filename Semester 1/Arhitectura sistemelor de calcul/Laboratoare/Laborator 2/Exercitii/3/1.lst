     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9                                  
    10 00000000 0500                    a dw 5
    11 00000002 0100                    b dw 1
    12 00000004 0700                    c dw 7
    13 00000006 0300                    d dw 3
    14                                  
    15                                  segment code use32 class=code
    16                                  start:
    17                                      ;(c+b+a)-(d+d) = 7 = 0007h
    18 00000000 66A1[04000000]              mov ax, [c]
    19 00000006 660305[02000000]            add ax, [b]
    20 0000000D 660305[00000000]            add ax, [a]
    21 00000014 662B05[06000000]            sub ax, [d]
    22 0000001B 662B05[06000000]            sub ax, [d]
    23                                      ;ax = 10 = 000Ah
    24                                      
    25                                      ;(c+b+b)-(c+a+d) = -6 = FFFAh
    26 00000022 66A1[04000000]              mov ax, [c]
    27 00000028 660305[02000000]            add ax, [b]
    28 0000002F 660305[02000000]            add ax, [b]
    29 00000036 662B05[04000000]            sub ax, [c]
    30 0000003D 662B05[00000000]            sub ax, [a]
    31 00000044 662B05[06000000]            sub ax, [d]
    32                                      ;ax = -6 = FFFAh
    33                                      
    34                                      ;b+c+d+a-(d+c) = 6 = 0006h
    35 0000004B 66A1[02000000]              mov ax, [b]
    36 00000051 660305[04000000]            add ax, [c]
    37 00000058 660305[06000000]            add ax, [d]
    38 0000005F 660305[00000000]            add ax, [a]
    39 00000066 662B05[06000000]            sub ax, [d]
    40 0000006D 662B05[04000000]            sub ax, [c]
    41                                      ;ax = 6 = 0006h
    42                                      
    43                                      ;(a-b+c)-(d+d) = 5 = 0005h
    44 00000074 66A1[00000000]              mov ax, [a]
    45 0000007A 662B05[02000000]            sub ax, [b]
    46 00000081 660305[04000000]            add ax, [c]
    47 00000088 662B05[06000000]            sub ax, [d]
    48 0000008F 662B05[06000000]            sub ax, [d]
    49                                      ;ax = 5 = 0005h
    50                                      
    51                                      ;(a+b-c)-d = -4 = FFFCh
    52 00000096 66A1[00000000]              mov ax, [a]
    53 0000009C 660305[02000000]            add ax, [b]
    54 000000A3 662B05[04000000]            sub ax, [c]
    55 000000AA 662B05[06000000]            sub ax, [d]
    56                                      ;ax = -4 = FFFCh
    57                                      
    58                                      ;a-b+(c-d+a) = 13 = 000Dh
    59 000000B1 66A1[00000000]              mov ax, [a]
    60 000000B7 662B05[02000000]            sub ax, [b]
    61 000000BE 660305[04000000]            add ax, [c]
    62 000000C5 662B05[06000000]            sub ax, [d]
    63 000000CC 660305[00000000]            add ax, [a]
    64                                      ;ax = 13 = 000Dh
    65                                      
    66 000000D3 6A00                        push dword 0
    67 000000D5 FF15[00000000]              call [exit]
